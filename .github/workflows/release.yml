on:
  push:
    tags:
      - '*'

name: Upload Release Assets

jobs:
  release_assets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install poetry
        run: |
          python -m pip install -U pip
          python -m pip install poetry

      - name: Cache Poetry virtualenv
        uses: actions/cache@v2
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Set poetry config
        run: |
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.path ~/.virtualenvs

      - name: Install dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Run tests (pytest)
        run: poetry run pytest

      - name: Build package (using poetry)
        run: poetry build

      - name: Display artifacts
        run: ls -R
        working-directory: dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.ref }}
          release_name: Release v${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload tar file
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/pyasm-${{ github.ref }}.tar.gz
          asset_name: pyasm-${{ github.ref }}.tar.gz
